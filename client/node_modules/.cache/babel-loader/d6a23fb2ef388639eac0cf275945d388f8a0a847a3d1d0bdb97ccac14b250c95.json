{"ast":null,"code":"/**\r\n * @licence\r\n * @author Sergey Melyukov 2016\r\n */\n\n/**\r\n * Waiting while all promises will be settled to onFulfilled or onRejected state\r\n * Returned promise will be resolved with array with info for every passed promise:\r\n * Array<{status:boolean, value:*}>\r\n *\r\n * onProgress-function will be called (if passed) for every settled promise\r\n *\r\n * @param {Array<Promise>} promises\r\n * @param {function({status:boolean, value:*})=} onProgress\r\n *\r\n * @return {Promise}\r\n */\nfunction allSettled(promises, onProgress) {\n  var mapped = promises.map(function (promise) {\n    return promise.then(function (value) {\n      return {\n        value: value,\n        status: true\n      };\n    }, function (e) {\n      return {\n        value: e,\n        status: false\n      };\n    }).then(function (value) {\n      if (typeof onProgress === 'function') {\n        onProgress(value);\n      }\n      return value;\n    });\n  });\n  return Promise.all(mapped);\n}\nmodule.exports = allSettled;","map":{"version":3,"names":["allSettled","promises","onProgress","mapped","map","promise","then","value","status","e","Promise","all","module","exports"],"sources":["C:/Users/Melvi/OneDrive/Documents/Fall 2022/Fundamentals of Software Engineering/SoftwareEngineeringProject/node_modules/promise-ext-settled/src/index.js"],"sourcesContent":["/**\r\n * @licence\r\n * @author Sergey Melyukov 2016\r\n */\r\n\r\n/**\r\n * Waiting while all promises will be settled to onFulfilled or onRejected state\r\n * Returned promise will be resolved with array with info for every passed promise:\r\n * Array<{status:boolean, value:*}>\r\n *\r\n * onProgress-function will be called (if passed) for every settled promise\r\n *\r\n * @param {Array<Promise>} promises\r\n * @param {function({status:boolean, value:*})=} onProgress\r\n *\r\n * @return {Promise}\r\n */\r\nfunction allSettled(promises, onProgress) {\r\n    var mapped = promises.map(function(promise) {\r\n        return promise.then(function(value) {\r\n            return {\r\n                value: value,\r\n                status: true\r\n            };\r\n        }, function(e) {\r\n            return {\r\n                value: e,\r\n                status: false\r\n            };\r\n        }).then(function(value) {\r\n            if (typeof onProgress === 'function') {\r\n                onProgress(value);\r\n            }\r\n\r\n            return value;\r\n        });\r\n    });\r\n\r\n    return Promise.all(mapped);\r\n}\r\n\r\nmodule.exports = allSettled;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAU,CAACC,QAAQ,EAAEC,UAAU,EAAE;EACtC,IAAIC,MAAM,GAAGF,QAAQ,CAACG,GAAG,CAAC,UAASC,OAAO,EAAE;IACxC,OAAOA,OAAO,CAACC,IAAI,CAAC,UAASC,KAAK,EAAE;MAChC,OAAO;QACHA,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAE;MACZ,CAAC;IACL,CAAC,EAAE,UAASC,CAAC,EAAE;MACX,OAAO;QACHF,KAAK,EAAEE,CAAC;QACRD,MAAM,EAAE;MACZ,CAAC;IACL,CAAC,CAAC,CAACF,IAAI,CAAC,UAASC,KAAK,EAAE;MACpB,IAAI,OAAOL,UAAU,KAAK,UAAU,EAAE;QAClCA,UAAU,CAACK,KAAK,CAAC;MACrB;MAEA,OAAOA,KAAK;IAChB,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,OAAOG,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;AAC9B;AAEAS,MAAM,CAACC,OAAO,GAAGb,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}