{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guillermo\\\\Documents\\\\GitHub\\\\test\\\\SoftwareEngineeringProject\\\\client\\\\src\\\\context\\\\authContext.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  //get user info from localStorage if it exists, originally a string so make it an object\n  const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem(\"user\")) || null);\n\n  //api call to login\n  const login = async inputs => {\n    const res = await axios.post(\"/authen/login\", inputs);\n    setCurrentUser(res.data);\n  };\n  const logout = async inputs => {\n    await axios.post(\"/authen/logout\");\n    setCurrentUser(null);\n  };\n\n  //update local storage when chaning user, and change objec to string to store it\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(currentUser));\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"yK7gvC6SLVOPzs9vDLLUNg/nC+4=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["axios","createContext","useEffect","useState","AuthContext","AuthContextProvider","children","currentUser","setCurrentUser","JSON","parse","localStorage","getItem","login","inputs","res","post","data","logout","setItem","stringify"],"sources":["C:/Users/Guillermo/Documents/GitHub/test/SoftwareEngineeringProject/client/src/context/authContext.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n\r\n    //get user info from localStorage if it exists, originally a string so make it an object\r\n  const [currentUser, setCurrentUser] = useState(\r\n    JSON.parse(localStorage.getItem(\"user\")) || null\r\n  );\r\n\r\n  //api call to login\r\n  const login = async (inputs) => {\r\n    const res = await axios.post(\"/authen/login\", inputs);\r\n    setCurrentUser(res.data);\r\n  };\r\n\r\n  const logout = async (inputs) => {\r\n    await axios.post(\"/authen/logout\");\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  //update local storage when chaning user, and change objec to string to store it\r\n  useEffect(() => {\r\n    localStorage.setItem(\"user\", JSON.stringify(currentUser));\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE3D,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAE;AAE1C,OAAO,MAAMI,mBAAmB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAE5C;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAC5CM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CACjD;;EAED;EACA,MAAMC,KAAK,GAAG,MAAOC,MAAM,IAAK;IAC9B,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,eAAe,EAAEF,MAAM,CAAC;IACrDN,cAAc,CAACO,GAAG,CAACE,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMC,MAAM,GAAG,MAAOJ,MAAM,IAAK;IAC/B,MAAMd,KAAK,CAACgB,IAAI,CAAC,gBAAgB,CAAC;IAClCR,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACAN,SAAS,CAAC,MAAM;IACdS,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACb,WAAW,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEA,WAAW;MAAEM,KAAK;MAAEK;IAAO,CAAE;IAAA,UACzDZ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B,CAAC;AAAC,GA5BWD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}