{"ast":null,"code":"import styled, { keyframes } from 'styled-components';\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport preloader from 'image-preloader';\nimport VisibilitySensor from 'react-visibility-sensor';\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n};\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\nvar taggedTemplateLiteral = function (strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n};\nvar _templateObject = taggedTemplateLiteral([\"\\n  from {\\n    opacity: 0;\\n  }\\n\\n  to {\\n    opacity: 1;\\n  }\\n\"], [\"\\n  from {\\n    opacity: 0;\\n  }\\n\\n  to {\\n    opacity: 1;\\n  }\\n\"]),\n  _templateObject2 = taggedTemplateLiteral([\"\\n  from {\\n    background-position: 0 0 ;\\n  }\\n\\n  to {\\n    background-position: calc(100% + 50px);\\n  }\\n\"], [\"\\n  from {\\n    background-position: 0 0 ;\\n  }\\n\\n  to {\\n    background-position: calc(100% + 50px);\\n  }\\n\"]);\nvar fadeIn = keyframes(_templateObject);\nvar shine = keyframes(_templateObject2);\nvar _templateObject$1 = taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  background-color: #eee;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: \", \";\\n  opacity: \", \";\\n  transition: opacity \", \" ease;\\n\\n  &:before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 120%;\\n    height: 120%;\\n    transform: rotate(-30deg);\\n    background-image: linear-gradient(\\n      100deg,\\n      rgba(255, 255, 255, 0),\\n      rgba(255, 255, 255, 0.2) 50%,\\n      rgba(255, 255, 255, 0) 80%\\n    );\\n    background-repeat: no-repeat;\\n    background-position: 0 0;\\n    background-size: 100px 100%;\\n    animation: \", \" 1s infinite linear;\\n  }\\n\"], [\"\\n  width: 100%;\\n  height: 100%;\\n  background-color: #eee;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: \", \";\\n  opacity: \", \";\\n  transition: opacity \", \" ease;\\n\\n  &:before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 120%;\\n    height: 120%;\\n    transform: rotate(-30deg);\\n    background-image: linear-gradient(\\n      100deg,\\n      rgba(255, 255, 255, 0),\\n      rgba(255, 255, 255, 0.2) 50%,\\n      rgba(255, 255, 255, 0) 80%\\n    );\\n    background-repeat: no-repeat;\\n    background-position: 0 0;\\n    background-size: 100px 100%;\\n    animation: \", \" 1s infinite linear;\\n  }\\n\"]);\nvar Wrapper = styled.div(_templateObject$1, function (props) {\n  return props.isOnTop ? 10 : -1;\n}, function (props) {\n  return props.isOnTop ? props.hasLoaded ? 0 : 1 : 1;\n}, function (props) {\n  return props.transitionTime;\n}, shine);\nvar defaults$1 = {\n  transitionTime: \"0.3s\"\n};\nvar Loader = function Loader(_ref) {\n  var isOnTop = _ref.isOnTop,\n    hasLoaded = _ref.hasLoaded,\n    transitionTime = _ref.transitionTime;\n  return React.createElement(Wrapper, {\n    isOnTop: isOnTop,\n    hasLoaded: hasLoaded,\n    transitionTime: transitionTime\n  });\n};\nLoader.propTypes = {\n  isOnTop: PropTypes.bool,\n  hasLoaded: PropTypes.bool,\n  transitionTime: PropTypes.string\n};\nLoader.defaultProps = {\n  transitionTime: defaults$1.transitionTime\n};\nvar cssTimeToMs = function cssTimeToMs(cssTime) {\n  var num = parseFloat(cssTime, 10);\n  var unit = cssTime.match(/m?s/);\n  var milliseconds = void 0;\n  if (unit) {\n    unit = unit[0];\n  }\n  switch (unit) {\n    case \"s\":\n      milliseconds = num * 1000;\n      break;\n    case \"ms\":\n      milliseconds = num;\n      break;\n    default:\n      milliseconds = 0;\n      break;\n  }\n  return milliseconds;\n};\nvar getAspectRatioPercentage = function getAspectRatioPercentage(width, height) {\n  var widthNumber = parseInt(width, 10);\n  var heightNumber = parseInt(height, 10);\n  var ratio = heightNumber / widthNumber * 100;\n  return ratio + \"%\";\n};\nvar ImageLoader = function (_React$Component) {\n  inherits(ImageLoader, _React$Component);\n  function ImageLoader() {\n    var _ref;\n    var _temp, _this, _ret;\n    classCallCheck(this, ImageLoader);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ImageLoader.__proto__ || Object.getPrototypeOf(ImageLoader)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      hasLoaded: false,\n      hasFailed: false,\n      shouldShowLoader: true,\n      visibilitySensorIsActive: true\n    }, _this.handleImageLoaderLoaded = function () {\n      var transitionTime = _this.props.transitionTime;\n      var hideLoaderDelay = cssTimeToMs(transitionTime);\n      _this.setState({\n        hasLoaded: true\n      }, function () {\n        setTimeout(function () {\n          if (!_this._isMounted) return;\n          _this.setState({\n            shouldShowLoader: false\n          });\n        }, hideLoaderDelay);\n      });\n    }, _this.handleImageLoaderFailed = function () {\n      _this.setState({\n        hasFailed: true\n      });\n    }, _this.handleVisibilityChange = function (isVisible) {\n      if (!isVisible) return;\n      _this.setState({\n        visibilitySensorIsActive: false\n      });\n      _this.preloadImage();\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n  createClass(ImageLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      if (!this.props.lazyLoad) {\n        this.preloadImage();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.src !== this.props.src) {\n        if (!this.props.lazyLoad) {\n          this.preloadImage();\n        } else {\n          this.setState({\n            visibilitySensorIsActive: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n        src = _props.src,\n        children = _props.children,\n        lazyLoad = _props.lazyLoad;\n      var _state = this.state,\n        hasLoaded = _state.hasLoaded,\n        hasFailed = _state.hasFailed,\n        shouldShowLoader = _state.shouldShowLoader,\n        visibilitySensorIsActive = _state.visibilitySensorIsActive;\n      /*\r\n       * When using ImageLoader the children prop should be a function.\r\n       * Render calls this function with the props it requires to\r\n       * fade in an image.\r\n       * See https://reactjs.org/docs/render-props.html\r\n       */\n\n      var childElement = children({\n        hasLoaded: hasLoaded,\n        shouldShowLoader: shouldShowLoader,\n        hasFailed: hasFailed,\n        src: src\n      });\n\n      /*\r\n       * Wrap element in react visibility sensor when lazyLoad is true\r\n       */\n      return lazyLoad ? React.createElement(VisibilitySensor, {\n        active: visibilitySensorIsActive,\n        onChange: this.handleVisibilityChange,\n        partialVisibility: true\n      }, childElement) : childElement;\n    }\n  }, {\n    key: \"preloadImage\",\n    value: function preloadImage() {\n      var src = this.props.src;\n      preloader.simplePreload(src).then(this.handleImageLoaderLoaded).catch(this.handleImageLoaderFailed);\n    }\n\n    /*\r\n     * Once the image is loaded successfully this handler will be\r\n     * called, this will change the `hasLoaded` attribute to true\r\n     * then the `shouldShowLoader` attribute to false after\r\n     * the transition has completed. The reason we do this on a\r\n     * timeout is to ensure the loader is not hidden as soon as the\r\n     * image has loaded resulting in a 'flash'\r\n     */\n  }]);\n\n  return ImageLoader;\n}(React.Component);\nImageLoader.propTypes = {\n  src: PropTypes.string.isRequired,\n  transitionTime: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node, PropTypes.func])\n};\nImageLoader.defaultProps = {\n  transitionTime: defaults$1.transitionTime\n};\nvar _templateObject$2 = taggedTemplateLiteral([\"\\n  \", \";\\n  \", \";\\n  position: relative;\\n  overflow: hidden;\\n\"], [\"\\n  \", \";\\n  \", \";\\n  position: relative;\\n  overflow: hidden;\\n\"]);\nvar Wrapper$1 = styled.div(_templateObject$2, function (_ref) {\n  var width = _ref.width;\n  return !!width && \"width: \" + width;\n}, function (_ref2) {\n  var height = _ref2.height;\n  return !!height && \"height: \" + height;\n});\nvar _templateObject$3 = taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  animation: \", \" \", \" ease;\\n\"], [\"\\n  width: 100%;\\n  height: 100%;\\n  animation: \", \" \", \" ease;\\n\"]);\nvar Img = styled.img(_templateObject$3, fadeIn, function (props) {\n  return props.transitionTime;\n});\nvar _templateObject$4 = taggedTemplateLiteral([\"\\n  \", \";\\n  \", \";\\n  \", \";\\n  position: relative;\\n  overflow: hidden;\\n\"], [\"\\n  \", \";\\n  \", \";\\n  \", \";\\n  position: relative;\\n  overflow: hidden;\\n\"]);\nvar Wrapper$2 = styled.div(_templateObject$4, function (_ref) {\n  var width = _ref.width,\n    isResponsive = _ref.isResponsive;\n  return !!width && !isResponsive && \"width: \" + width;\n}, function (_ref2) {\n  var height = _ref2.height,\n    isResponsive = _ref2.isResponsive;\n  return !!height && !isResponsive && \"height: \" + height;\n}, function (_ref3) {\n  var isResponsive = _ref3.isResponsive;\n  return isResponsive && \"\\n      width: 100%;\\n      height: 100%;\\n    \";\n});\nvar BackgroundImage = function BackgroundImage(_ref) {\n  var src = _ref.src,\n    width = _ref.width,\n    height = _ref.height,\n    transitionTime = _ref.transitionTime,\n    renderLoader = _ref.renderLoader,\n    disableLoader = _ref.disableLoader,\n    useChild = _ref.useChild,\n    children = _ref.children,\n    element = _ref.element,\n    lazyLoad = _ref.lazyLoad,\n    wrapperClassName = _ref.wrapperClassName,\n    isResponsive = _ref.isResponsive,\n    wrapperRef = _ref.wrapperRef,\n    props = objectWithoutProperties(_ref, [\"src\", \"width\", \"height\", \"transitionTime\", \"renderLoader\", \"disableLoader\", \"useChild\", \"children\", \"element\", \"lazyLoad\", \"wrapperClassName\", \"isResponsive\", \"wrapperRef\"]);\n  return React.createElement(ImageLoader, {\n    src: src,\n    transitionTime: transitionTime,\n    lazyLoad: lazyLoad\n  }, function (_ref2) {\n    var hasLoaded = _ref2.hasLoaded,\n      shouldShowLoader = _ref2.shouldShowLoader,\n      hasFailed = _ref2.hasFailed,\n      src = _ref2.src;\n    var backgroundImageStyle = {\n      backgroundImage: \"url(\\\"\" + src + \"\\\")\"\n    };\n    var style = void 0;\n    var childElement = void 0;\n    if (useChild) {\n      /*\r\n       * When in useChild mode we need to clone the child, append the style\r\n       * and add relative positioning for the loader.\r\n       */\n      style = children && children.props && children.props.style ? _extends({}, children.props.style) : {};\n      style.position = \"relative\";\n      hasLoaded ? style = _extends({}, style, backgroundImageStyle) : style;\n      childElement = React.cloneElement(children, {\n        style: style\n      });\n    } else {\n      /*\r\n       * When not in useChild mode we need to create a new element based on\r\n       * the element prop, apply the styles and include the current children\r\n       */\n      style = props.style ? _extends({}, props.style) : {};\n      style.width = !isResponsive ? width : \"100%\";\n      style.height = !isResponsive ? height : \"auto\";\n      if (isResponsive) {\n        style.paddingTop = getAspectRatioPercentage(width, height);\n      }\n      hasLoaded ? style = _extends({}, style, backgroundImageStyle) : style;\n      childElement = React.createElement(element, _extends({}, props, {\n        style: style\n      }), children);\n    }\n    return React.createElement(Wrapper$2, {\n      width: width,\n      height: height,\n      isResponsive: isResponsive,\n      className: wrapperClassName,\n      ref: wrapperRef\n    }, childElement, shouldShowLoader && !disableLoader && React.createElement(Fragment, null, renderLoader ? renderLoader({\n      hasLoaded: hasLoaded,\n      hasFailed: hasFailed\n    }) : React.createElement(Loader, {\n      isOnTop: true,\n      hasLoaded: hasLoaded,\n      transitionTime: transitionTime\n    })));\n  });\n};\nBackgroundImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  transitionTime: PropTypes.string,\n  renderLoader: PropTypes.func,\n  disableLoader: PropTypes.bool,\n  useChild: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  element: PropTypes.string,\n  style: PropTypes.object,\n  wrapperClassName: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  isResponsive: PropTypes.bool,\n  wrapperRef: PropTypes.string\n};\nBackgroundImage.defaultProps = {\n  transitionTime: defaults$1.transitionTime,\n  element: \"div\"\n};\nvar Image = function Image(_ref) {\n  var src = _ref.src,\n    width = _ref.width,\n    height = _ref.height,\n    transitionTime = _ref.transitionTime,\n    renderLoader = _ref.renderLoader,\n    disableLoader = _ref.disableLoader,\n    wrapperClassName = _ref.wrapperClassName,\n    isResponsive = _ref.isResponsive,\n    lazyLoad = _ref.lazyLoad,\n    wrapperRef = _ref.wrapperRef,\n    props = objectWithoutProperties(_ref, ['src', 'width', 'height', 'transitionTime', 'renderLoader', 'disableLoader', 'wrapperClassName', 'isResponsive', 'lazyLoad', 'wrapperRef']);\n  return (\n    /*\r\n     * When in isResponsive is true we will need to make\r\n     * use of <BackgroundImage /> as in order to achieve responsive\r\n     * images with an aspect ratio we need to make use of a background image.\r\n     */\n    isResponsive ? React.createElement(BackgroundImage, _extends({\n      src: src,\n      width: width,\n      height: height,\n      transitionTime: transitionTime,\n      renderLoader: renderLoader,\n      disableLoader: disableLoader,\n      wrapperClassName: wrapperClassName,\n      lazyLoad: lazyLoad,\n      isResponsive: true,\n      wrapperRef: wrapperRef\n    }, props)) : React.createElement(ImageLoader, {\n      src: src,\n      transitionTime: transitionTime,\n      lazyLoad: lazyLoad\n    }, function (_ref2) {\n      var hasLoaded = _ref2.hasLoaded,\n        shouldShowLoader = _ref2.shouldShowLoader,\n        hasFailed = _ref2.hasFailed,\n        src = _ref2.src;\n      return React.createElement(Wrapper$1, {\n        width: width,\n        height: height,\n        className: wrapperClassName,\n        ref: wrapperRef\n      }, hasLoaded && React.createElement(Img, _extends({\n        src: src,\n        transitionTime: transitionTime\n      }, props)), shouldShowLoader && !disableLoader && React.createElement(Fragment, null, renderLoader ? renderLoader({\n        hasLoaded: hasLoaded,\n        hasFailed: hasFailed\n      }) : React.createElement(Loader, null)));\n    })\n  );\n};\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  transitionTime: PropTypes.string,\n  renderLoader: PropTypes.func,\n  disableLoader: PropTypes.bool,\n  wrapperClassName: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  isResponsive: PropTypes.bool,\n  wrapperRef: PropTypes.string\n};\nImage.defaultProps = {\n  transitionTime: defaults$1.transitionTime\n};\nexport { Image, BackgroundImage, ImageLoader };","map":{"version":3,"mappings":"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","names":["fadeIn","keyframes","shine","Wrapper","styled","div","props","isOnTop","hasLoaded","transitionTime","defaults","Loader","React","propTypes","PropTypes","bool","string","defaultProps","cssTimeToMs","num","parseFloat","cssTime","unit","match","milliseconds","getAspectRatioPercentage","width","height","widthNumber","parseInt","heightNumber","ratio","ImageLoader","state","handleImageLoaderLoaded","_this","hideLoaderDelay","setState","_isMounted","handleImageLoaderFailed","hasFailed","handleVisibilityChange","isVisible","visibilitySensorIsActive","preloadImage","lazyLoad","prevProps","src","children","shouldShowLoader","childElement","simplePreload","then","catch","Component","isRequired","oneOfType","arrayOf","node","func","Img","img","isResponsive","BackgroundImage","renderLoader","disableLoader","useChild","element","wrapperClassName","wrapperRef","backgroundImageStyle","backgroundImage","style","position","cloneElement","paddingTop","createElement","object","Image","className","ref"],"sources":["C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\keyframes.js","C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\components\\Loader\\elements\\Wrapper.js","C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\defaults.js","C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\components\\Loader\\Loader.js","C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\util.js","C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\components\\ImageLoader\\ImageLoader.js","C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\components\\Image\\elements\\Wrapper.js","C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\components\\Image\\elements\\Img.js","C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\components\\BackgroundImage\\elements\\Wrapper.js","C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\components\\BackgroundImage\\BackgroundImage.js","C:\\Users\\Melvi\\OneDrive\\Documents\\Fall 2022\\Fundamentals of Software Engineering\\SoftwareEngineeringProject\\node_modules\\react-image-and-background-image-fade\\src\\components\\Image\\Image.js"],"sourcesContent":["import { keyframes } from \"styled-components\";\n\nexport const fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const shine = keyframes`\n  from {\n    background-position: 0 0 ;\n  }\n\n  to {\n    background-position: calc(100% + 50px);\n  }\n`;\n","import styled from \"styled-components\";\nimport { shine } from \"../../../keyframes\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #eee;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: ${props => (props.isOnTop ? 10 : -1)};\n  opacity: ${props => (props.isOnTop ? (props.hasLoaded ? 0 : 1) : 1)};\n  transition: opacity ${props => props.transitionTime} ease;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 120%;\n    height: 120%;\n    transform: rotate(-30deg);\n    background-image: linear-gradient(\n      100deg,\n      rgba(255, 255, 255, 0),\n      rgba(255, 255, 255, 0.2) 50%,\n      rgba(255, 255, 255, 0) 80%\n    );\n    background-repeat: no-repeat;\n    background-position: 0 0;\n    background-size: 100px 100%;\n    animation: ${shine} 1s infinite linear;\n  }\n`;\n\nexport default Wrapper;\n","export const defaults = {\n  transitionTime: \"0.3s\",\n};\n\nexport default defaults;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Wrapper from \"./elements/Wrapper\";\nimport defaults from \"../../defaults\";\n\nexport const Loader = ({ isOnTop, hasLoaded, transitionTime }) => (\n  <Wrapper\n    isOnTop={isOnTop}\n    hasLoaded={hasLoaded}\n    transitionTime={transitionTime}\n  />\n);\n\nLoader.propTypes = {\n  isOnTop: PropTypes.bool,\n  hasLoaded: PropTypes.bool,\n  transitionTime: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  transitionTime: defaults.transitionTime,\n};\n\nexport default Loader;\n","export const cssTimeToMs = cssTime => {\n  const num = parseFloat(cssTime, 10);\n  let unit = cssTime.match(/m?s/);\n  let milliseconds;\n\n  if (unit) {\n    unit = unit[0];\n  }\n\n  switch (unit) {\n    case \"s\":\n      milliseconds = num * 1000;\n      break;\n    case \"ms\":\n      milliseconds = num;\n      break;\n    default:\n      milliseconds = 0;\n      break;\n  }\n\n  return milliseconds;\n};\n\nexport const getAspectRatioPercentage = (width, height) => {\n  const widthNumber = parseInt(width, 10);\n  const heightNumber = parseInt(height, 10);\n  const ratio = (heightNumber / widthNumber) * 100;\n  return `${ratio}%`;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport preloader from \"image-preloader\";\nimport { cssTimeToMs } from \"../../util\";\nimport defaults from \"../../defaults\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nexport class ImageLoader extends React.Component {\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    transitionTime: PropTypes.string,\n    lazyLoad: PropTypes.bool,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n  };\n\n  state = {\n    hasLoaded: false,\n    hasFailed: false,\n    shouldShowLoader: true,\n    visibilitySensorIsActive: true,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    if (!this.props.lazyLoad) {\n      this.preloadImage();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.src !== this.props.src) {\n      if (!this.props.lazyLoad) {\n        this.preloadImage();\n      } else {\n        this.setState({ visibilitySensorIsActive: true });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const { src, children, lazyLoad } = this.props;\n    const {\n      hasLoaded,\n      hasFailed,\n      shouldShowLoader,\n      visibilitySensorIsActive,\n    } = this.state;\n    /*\n     * When using ImageLoader the children prop should be a function.\n     * Render calls this function with the props it requires to\n     * fade in an image.\n     * See https://reactjs.org/docs/render-props.html\n     */\n    const childElement = children({\n      hasLoaded,\n      shouldShowLoader,\n      hasFailed,\n      src,\n    });\n\n    /*\n     * Wrap element in react visibility sensor when lazyLoad is true\n     */\n    return lazyLoad ? (\n      <VisibilitySensor\n        active={visibilitySensorIsActive}\n        onChange={this.handleVisibilityChange}\n        partialVisibility\n      >\n        {childElement}\n      </VisibilitySensor>\n    ) : (\n      childElement\n    );\n  }\n\n  preloadImage() {\n    const { src } = this.props;\n    preloader\n      .simplePreload(src)\n      .then(this.handleImageLoaderLoaded)\n      .catch(this.handleImageLoaderFailed);\n  }\n\n  /*\n   * Once the image is loaded successfully this handler will be\n   * called, this will change the `hasLoaded` attribute to true\n   * then the `shouldShowLoader` attribute to false after\n   * the transition has completed. The reason we do this on a\n   * timeout is to ensure the loader is not hidden as soon as the\n   * image has loaded resulting in a 'flash'\n   */\n  handleImageLoaderLoaded = () => {\n    const { transitionTime } = this.props;\n    const hideLoaderDelay = cssTimeToMs(transitionTime);\n    this.setState({ hasLoaded: true }, () => {\n      setTimeout(() => {\n        if (!this._isMounted) return;\n        this.setState({\n          shouldShowLoader: false,\n        });\n      }, hideLoaderDelay);\n    });\n  };\n\n  handleImageLoaderFailed = () => {\n    this.setState({ hasFailed: true });\n  };\n\n  handleVisibilityChange = isVisible => {\n    if (!isVisible) return;\n    this.setState({ visibilitySensorIsActive: false });\n    this.preloadImage();\n  };\n}\n\nImageLoader.defaultProps = {\n  transitionTime: defaults.transitionTime,\n};\n\nexport default ImageLoader;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  ${({ width }) => !!width && `width: ${width}`};\n  ${({ height }) => !!height && `height: ${height}`};\n  position: relative;\n  overflow: hidden;\n`;\n\nexport default Wrapper;\n","import styled from \"styled-components\";\nimport { fadeIn } from \"../../../keyframes\";\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  animation: ${fadeIn} ${props => props.transitionTime} ease;\n`;\n\nexport default Img;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  ${({ width, isResponsive }) => !!width && !isResponsive && `width: ${width}`};\n  ${({ height, isResponsive }) =>\n    !!height && !isResponsive && `height: ${height}`};\n  ${({ isResponsive }) =>\n    isResponsive &&\n    `\n      width: 100%;\n      height: 100%;\n    `};\n  position: relative;\n  overflow: hidden;\n`;\n\nexport default Wrapper;\n","import React, { Fragment } from \"react\";\nimport Loader from \"../Loader\";\nimport ImageLoader from \"../ImageLoader\";\nimport { Wrapper } from \"./elements/Wrapper\";\nimport PropTypes from \"prop-types\";\nimport defaults from \"../../defaults\";\nimport { getAspectRatioPercentage } from \"../../util\";\n\nexport const BackgroundImage = ({\n  src,\n  width,\n  height,\n  transitionTime,\n  renderLoader,\n  disableLoader,\n  useChild,\n  children,\n  element,\n  lazyLoad,\n  wrapperClassName,\n  isResponsive,\n  wrapperRef,\n  ...props\n}) => (\n  <ImageLoader src={src} transitionTime={transitionTime} lazyLoad={lazyLoad}>\n    {({ hasLoaded, shouldShowLoader, hasFailed, src }) => {\n      const backgroundImageStyle = { backgroundImage: `url(\"${src}\")` };\n      let style;\n      let childElement;\n      if (useChild) {\n        /*\n         * When in useChild mode we need to clone the child, append the style\n         * and add relative positioning for the loader.\n         */\n        style =\n          children && children.props && children.props.style\n            ? { ...children.props.style }\n            : {};\n        style.position = \"relative\";\n        hasLoaded ? (style = { ...style, ...backgroundImageStyle }) : style;\n        childElement = React.cloneElement(children, { style });\n      } else {\n        /*\n         * When not in useChild mode we need to create a new element based on\n         * the element prop, apply the styles and include the current children\n         */\n        style = props.style ? { ...props.style } : {};\n        style.width = !isResponsive ? width : \"100%\";\n        style.height = !isResponsive ? height : \"auto\";\n        if (isResponsive) {\n          style.paddingTop = getAspectRatioPercentage(width, height);\n        }\n\n        hasLoaded ? (style = { ...style, ...backgroundImageStyle }) : style;\n        childElement = React.createElement(\n          element,\n          { ...props, style },\n          children\n        );\n      }\n\n      return (\n        <Wrapper\n          width={width}\n          height={height}\n          isResponsive={isResponsive}\n          className={wrapperClassName}\n          ref={wrapperRef}\n        >\n          {childElement}\n          {shouldShowLoader && !disableLoader && (\n            <Fragment>\n              {renderLoader ? (\n                renderLoader({ hasLoaded, hasFailed })\n              ) : (\n                <Loader\n                  isOnTop\n                  hasLoaded={hasLoaded}\n                  transitionTime={transitionTime}\n                />\n              )}\n            </Fragment>\n          )}\n        </Wrapper>\n      );\n    }}\n  </ImageLoader>\n);\n\nBackgroundImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  transitionTime: PropTypes.string,\n  renderLoader: PropTypes.func,\n  disableLoader: PropTypes.bool,\n  useChild: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  element: PropTypes.string,\n  style: PropTypes.object,\n  wrapperClassName: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  isResponsive: PropTypes.bool,\n  wrapperRef: PropTypes.string,\n};\n\nBackgroundImage.defaultProps = {\n  transitionTime: defaults.transitionTime,\n  element: \"div\",\n};\n\nexport default BackgroundImage;\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Loader from '../Loader'\nimport ImageLoader from '../ImageLoader'\nimport Wrapper from './elements/Wrapper'\nimport Img from './elements/Img'\nimport defaults from '../../defaults'\nimport BackgroundImage from '../BackgroundImage'\n\nexport const Image = ({\n  src,\n  width,\n  height,\n  transitionTime,\n  renderLoader,\n  disableLoader,\n  wrapperClassName,\n  isResponsive,\n  lazyLoad,\n  wrapperRef,\n  ...props\n}) =>\n  /*\n   * When in isResponsive is true we will need to make\n   * use of <BackgroundImage /> as in order to achieve responsive\n   * images with an aspect ratio we need to make use of a background image.\n   */\n  isResponsive ? (\n    <BackgroundImage\n      src={src}\n      width={width}\n      height={height}\n      transitionTime={transitionTime}\n      renderLoader={renderLoader}\n      disableLoader={disableLoader}\n      wrapperClassName={wrapperClassName}\n      lazyLoad={lazyLoad}\n      isResponsive\n      wrapperRef={wrapperRef}\n      {...props}\n    />\n  ) : (\n    <ImageLoader src={src} transitionTime={transitionTime} lazyLoad={lazyLoad}>\n      {({ hasLoaded, shouldShowLoader, hasFailed, src }) => {\n        return (\n          <Wrapper width={width} height={height} className={wrapperClassName} ref={wrapperRef}>\n            {hasLoaded && (\n              <Img src={src} transitionTime={transitionTime} {...props} />\n            )}\n            {shouldShowLoader && !disableLoader && (\n              <Fragment>\n                {renderLoader ? (\n                  renderLoader({ hasLoaded, hasFailed })\n                ) : (\n                  <Loader />\n                )}\n              </Fragment>\n            )}\n          </Wrapper>\n        )\n      }}\n    </ImageLoader>\n  )\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  transitionTime: PropTypes.string,\n  renderLoader: PropTypes.func,\n  disableLoader: PropTypes.bool,\n  wrapperClassName: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  isResponsive: PropTypes.bool,\n  wrapperRef: PropTypes.string,\n}\n\nImage.defaultProps = {\n  transitionTime: defaults.transitionTime\n}\n\nexport default Image\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}