{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Melvi\\\\OneDrive\\\\Documents\\\\Fall 2022\\\\Fundamentals of Software Engineering\\\\SoftwareEngineeringProject\\\\client\\\\src\\\\components\\\\UserReserve.js\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport React, { useState } from \"react\";\nimport FormInput from \"./FormInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserReserve = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const [values, setValues] = useState({\n    fullName: \"\",\n    email: \"\",\n    date: \"\",\n    time: \"\",\n    phoneNumber: \"\",\n    numGuests: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"fullName\",\n    type: \"text\",\n    placeholder: \"Full Name\",\n    errorMessage: \"Username should be 3-16 characters and shouldn't include and special character!\",\n    label: \"Name\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    //js regex code\n    required: true\n  }, {\n    id: 2,\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"email\",\n    errorMessage: \"Should be a valid email adresss\",\n    label: \"Email\",\n    required: true\n  }, {\n    id: 3,\n    name: \"phoneNumber\",\n    type: \"number\",\n    placeholder: \"Phone Number\",\n    errorMessage: \"Not a valid phone number.\",\n    pattern: \"/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g\",\n    label: \"Phone Number\",\n    required: true\n  }, {\n    id: 4,\n    name: \"date\",\n    type: \"date\",\n    placeholder: \"date\",\n    errorMessage: \"\",\n    label: \"Date\"\n  }, {\n    id: 5,\n    name: \"time\",\n    type: \"time\",\n    min: \"5:00\",\n    placeholder: \"Time\",\n    //errorMessage:\"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character.\",\n    label: \"Time\",\n    //pattern: '^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$',\n    required: true\n  }, {\n    id: 6,\n    name: \"numGuests\",\n    type: \"number\",\n    placeholder: \"Number of Guests\",\n    errorMessage: \"Passwords don't match\",\n    label: \"Number of Guests\",\n    //pattern: values.password,\n    required: true\n  }];\n  const holidays = [\"2023-01-01\", \"2023-01-16\", \"2023-02-14\", \"2023-02-20\", \"2023-04-07\", \"2023-05-29\", \"2023-11-10\", \"2023-11-04\", \"2023-12-24\"];\n  const handleSubmit = e => {\n    e.preventDefault();\n    let high_traffic = new Boolean(false);\n    for (let i = 0; i < holidays.length; i++) {\n      if (values.date === holidays[i]) {\n        high_traffic = true;\n      } else {\n        high_traffic = false;\n      }\n    }\n    if (high_traffic === true) {}\n  };\n  const onChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n  console.log(values);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GuestReserve\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reserve a Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, {\n        ...input,\n        value: values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 12\n  }, this);\n};\n_s(UserReserve, \"IkHximINGP1Gy1Tu4uRDHXGYYeE=\");\n_c = UserReserve;\nexport default UserReserve;\nvar _c;\n$RefreshReg$(_c, \"UserReserve\");","map":{"version":3,"names":["React","useState","FormInput","UserReserve","show","setShow","values","setValues","fullName","email","date","time","phoneNumber","numGuests","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","min","holidays","handleSubmit","e","preventDefault","high_traffic","Boolean","i","length","onChange","target","value","console","log","map","input"],"sources":["C:/Users/Melvi/OneDrive/Documents/Fall 2022/Fundamentals of Software Engineering/SoftwareEngineeringProject/client/src/components/UserReserve.js"],"sourcesContent":["import \"../App.css\"\r\nimport React, { useState } from \"react\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nconst UserReserve = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const[values, setValues] = useState({\r\n        fullName:\"\",\r\n        email:\"\",\r\n        date:\"\",\r\n        time:\"\",\r\n        phoneNumber:\"\",\r\n        numGuests:\"\"\r\n    });\r\n    \r\n    const inputs = [\r\n        {\r\n            id:1,\r\n            name:\"fullName\",\r\n            type:\"text\",\r\n            placeholder:\"Full Name\",\r\n            errorMessage:\"Username should be 3-16 characters and shouldn't include and special character!\",\r\n            label:\"Name\",\r\n            pattern: \"^[A-Za-z0-9]{3,16}$\", //js regex code\r\n            required: true\r\n        },\r\n        {\r\n            id:2,\r\n            name:\"email\",\r\n            type:\"email\",\r\n            placeholder:\"email\",\r\n            errorMessage:\"Should be a valid email adresss\",\r\n            label:\"Email\",\r\n            required: true\r\n        },\r\n        {\r\n            id:3,\r\n            name:\"phoneNumber\",\r\n            type:\"number\",\r\n            placeholder:\"Phone Number\",\r\n            errorMessage:\"Not a valid phone number.\",\r\n            pattern:\"/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g\",\r\n            label:\"Phone Number\",\r\n            required: true\r\n        },\r\n        {\r\n            id:4,\r\n            name:\"date\",\r\n            type:\"date\",\r\n            placeholder:\"date\",\r\n            errorMessage:\"\",\r\n            label:\"Date\",\r\n        },\r\n        {\r\n            id:5,\r\n            name:\"time\",\r\n            type:\"time\",\r\n            min:\"5:00\",\r\n            placeholder:\"Time\",\r\n            //errorMessage:\"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character.\",\r\n            label:\"Time\",\r\n            //pattern: '^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$',\r\n            required: true\r\n        },\r\n        {\r\n            id:6,\r\n            name:\"numGuests\",\r\n            type:\"number\",\r\n            placeholder:\"Number of Guests\",\r\n            errorMessage:\"Passwords don't match\",\r\n            label:\"Number of Guests\",\r\n            //pattern: values.password,\r\n            required: true\r\n        }\r\n    ]\r\n\r\n    const holidays = [\r\n        \"2023-01-01\",\r\n        \"2023-01-16\",\r\n        \"2023-02-14\", \r\n        \"2023-02-20\",\r\n        \"2023-04-07\",\r\n        \"2023-05-29\",\r\n        \"2023-11-10\",\r\n        \"2023-11-04\",\r\n        \"2023-12-24\"\r\n    ]\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let high_traffic = new Boolean(false);\r\n\r\n        for(let i = 0; i < holidays.length; i++) {\r\n            if(values.date === holidays[i]){\r\n                high_traffic = true;\r\n            }\r\n            else {\r\n                high_traffic = false;\r\n            }\r\n        }\r\n\r\n        if(high_traffic === true){\r\n            \r\n        }\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setValues({...values, [e.target.name]: e.target.value});\r\n    }\r\n\r\n\r\n    console.log(values);\r\n    return <div className = \"GuestReserve\">\r\n        <form onSubmit={handleSubmit}>\r\n        <h1>Reserve a Table</h1>\r\n            {inputs.map(input=>(\r\n            <FormInput key = {input.id} {...input} value= {values[input.name]} onChange={onChange}/>\r\n            ))}\r\n            <button type=\"submit\">Submit</button>\r\n            {/* <h1>{values.birthday}</h1> */}\r\n        </form>\r\n\r\n    </div>\r\n};\r\n\r\n  export default UserReserve;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}